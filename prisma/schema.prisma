// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String?
  userId        String?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean   @default(false)
  emailVerified Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Add your custom models here
model Shop {
  id          String    @id @default(cuid())
  shopDomain  String    @unique
  accessToken String?
  campaigns   Campaign[]
  users       UserCollection[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Campaign {
  id          String    @id @default(cuid())
  shop        Shop      @relation(fields: [shopId], references: [id])
  shopId      String
  name        String
  type        String    // EASTER_EGG, HALLOWEEN, CHRISTMAS, etc.
  startDate   DateTime
  endDate     DateTime
  isActive    Boolean   @default(true)
  settings    Json      // Store campaign-specific settings
  treasures   Treasure[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Treasure {
  id          String    @id @default(cuid())
  campaign    Campaign  @relation(fields: [campaignId], references: [id])
  campaignId  String
  name        String
  description String?
  reward      Json      // Store reward details (discount code, free product, etc.)
  targetPages String[]  // Array of page URLs where treasure can appear
  timeToShow  Int?      // Time in seconds before showing
  pageViews   Int?      // Number of page views before showing
  isRandom    Boolean   @default(false)
  maxClaims   Int?      // Maximum number of times this treasure can be claimed
  claims      UserProgress[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model UserProgress {
  id          String    @id @default(cuid())
  treasure    Treasure  @relation(fields: [treasureId], references: [id])
  treasureId  String
  user        UserCollection @relation(fields: [userId], references: [id])
  userId      String
  claimed     Boolean   @default(false)
  claimedAt   DateTime?
  pageViews   Int       @default(0)
  timeSpent   Int       @default(0) // Time spent in seconds
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model UserCollection {
  id          String    @id @default(cuid())
  shop        Shop      @relation(fields: [shopId], references: [id])
  shopId      String
  email       String
  name        String?
  additionalData Json?  // Store additional collected information
  progress    UserProgress[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([shopId, email])
}
